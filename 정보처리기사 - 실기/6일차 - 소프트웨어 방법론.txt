1. 소프트웨어 개발 방법론 : 소프트웨어의 생산성과 품질 향상을 위한 방법론 
	- 구조적 방법론 : 정형화된 분석 절차에 따라 사용자 요구사항을 파악하여 문서화하는 처리 중심의 방법론 
		단계) 타당성 검토 -> 계획 -> 요구사항 -> 설계 -> 구현 -> 시험 -> 운용/유지보수

	- 정보공학 방법론 
	- 객체지항 방법론
	- 컴포넌트 기반(CBD) 방법론 : 기존의 시스템이나 소프트웨어를 구성하는 컴포넌트를 조합하여 하나의 새로운 애플리케이션을 만드는 방법론 
		단계) 개발준비 -> 분석 -> 설계 -> 구현 -> 테스트 -> 전개 -> 인도 

	- 제품 계열 방법론
	- 애자일 방법론 

2. 소프트웨어 재사용 : 이미 개발되어 인정받은 소프트웨어를 다른 소프트웨어 개발이나 유지에 사용하는 것
	- 합성 중심 : 전자 칩과 같은 소프트웨어 부품, 즉 블록을 만들어서 끼워 맞춰 소프트웨어를 완성시키는 방법
	- 생성 중심 : 추상화 형태로 써진 명세를 구체화하여 프로그램을 만드는 방법 

3. 소프트웨어 재공학 : 새로운 요구에 맞도록 기존 시스템을 이용하여 보다 나은 시스템을 구축하고, 새로운 기능을 추가하여 소프트웨어 성능을 향상시키는 것 

4. CASE(Computer Aided Software Engineering) : 소프트웨어 개발 과정에서 사용되는 요구 분석, 설계, 구현, 검사 및 디버깅 과정 전체 또는 일부를 컴퓨터와 전용 소프트웨어 도구를 사용하여 자동화하는 것 