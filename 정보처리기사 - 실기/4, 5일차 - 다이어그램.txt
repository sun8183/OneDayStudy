1. 다이어그램 : 사물과 관계를 도형으로 표현한 것 
	1. 구조적 다이어 그램 - 정적 모델링 : 사용자가 요구한 기능을 구현하는데 필요한 자료들의 논리적인 구조를 표현
		[종류] 
		- 클래스 다이어그램 : 클래스와 클래스가 가지는 속성, 클래스 사이의 관계를 표현, 시스템을 문서화 하는데 사용 
		* 연관 클래스 : 연관 관계에 있는 두 클래스에 추가적으로 표현해야 할 속성이나 오퍼레이션이 있는 경우 생성하는 클래스

		- 객체 다이어그램 : 클래스에 속한 사물들, 즉 인스턴스를 특정 시점의 객체와 객체 사이의 관계로 표현함 (럼바우 객체지향 분석 - 객체 모델링)
		- 컴포넌트 다이어그램 : 실제 구현 모듈인 컴포넌트 간의 관계나 컴포넌트 간의 인터페이스를 표현함 (구현 단계)
		- 배치 다이어그램 : 결과물, 프로세스, 컴포넌트 등 물리적 요소들의 위치를 표현함 (구현 단계)
		- 복합체 구조 다이어그램 : 클래스나 컴포넌트가 복합 구조를 갖는 경우 그 내부 구조를 표현함
		- 패키지 다이어그램 : 유스케이스나 클래스 등의 모델 요소들을 그룹화한 패키지 들의 관계를 표현함

	2. 행위 다이어그램 - 동적 모델링 : 시스템의 내부 구성 요소들의 상태 변화 과정과 과정에서 발생하는 상호 작용을 표현
		[종류]
		- 유스케이스 다이어그램 : 사용자의 요구를 분석하는 것으로, 기능 모델링 작업에 사용함 
			- 액터 : 시스템과 상호작용을 하는 모든 외부 요소, 주로 사람이나 외부 시스템을 의미함 
			- 시스템 : 시스템 내부의 유스케이스들을 사각형으로 묶어 시스템의 범위를 표현한 것
			- 유스케이스 : 사용자가 보는 관점에서 시스템이 액터에게 제공하는 서비스나 기능을 표현한 것
			- 관계 : 유스케이스에서 나타날 수 있는 관계, (포함) <<include>>, (확장) <<extends>> 

		- 순차 다이어그램 : 상호 작용하는 시스템이나 객체들이 주고받는 메시지를 표현함 
			- 생명선 : 객체가 메모리에 존재하는 기간, 객체 아래쪽에 점선을 그어 표현함
			- 실행 상자 : 객체가 메시지를 주고받으며 구동되고 있음을 표현함
			- 메시지 : 객체가 상호 작용을 위해 주고받는 메시지 

		- 커뮤니케이션 다이어그램 : 동작에 참여하는 객체들이 주고받는 메시지와 객체들 간의 연관 관계를 표현함 
			- 링크 : 객체들 간의 관계를 표현한 것, 액터와 객체, 객체와 객체 간에 실선을 그어 표현함  * (순차 다이어그램과 구별되는 특징) 
			- 메시지 : 객체가 상호 작용을 위해 주고받는 내용 

		- 상태 다이어그램 : 하나의 객체가 자신이 속한 클래스의 상태 변화 혹은 다른 객체와의 상호 작용에 따라 상태가 어떻게 변화하는지 표현 (럼바우 객체지항 분석 - 동적 모델링)
			- 
		- 활동 다이어그램 : 시스템이 어떤 기능을 수행하는지 객체의 처리 로직이나 조건에 따른 처리의 흐름을 순서에 따라 표현함
			- 액션 : 더 이상 분해할 수 없는 단일 작업
			- 액티비티 : 몇 개의 액션으로 분리될 수 있는 작업 
	
			* 스웜레인 : 액티비티 수행을 담당하는 주체를 구분, 가로 또는 실선을 그어 구분한다.
			
		- 상호작용 개요 다이어그램 : 상호작용 다이어그램 간의 제어 흐름을 표현함
		- 타이밍 다이어그램 : 객체 상태 변화와 시간 제약을 명시적으로 표현함 

2. 스테레오 타입(Stereotype) : UML에서 표현하는 기본 기능 외에 추가적인 기능을 표현 하는 것
	1. <<include>> : 연결된 다른 UML 요소에 대해 포함 관계에 있는 경우
	2. <<extends>> : 연결된 다른 UML 요소에 대해 확장 관계에 있는 경우
	3. <<interface>> : 인터페이스를 정의하는 경우
	4. <<exception>> : 예외를 정의하는 경우
	5. <<constructor>> : 생성자 역할을 수행하는 경우 