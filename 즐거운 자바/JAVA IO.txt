1. IO 란 ? 
 - Input & Output / 입출력 

2. Java IO : 어떤 대상으로 부터 읽어들여, 어떤 대상에게 쓰는 일을 한다.

3. Java IO 객체 
 - System.in : 표준 입력 
 - System.out : 표준 출력
 - System.err : 표준 에러 출력 

4. Decoreator 패턴 
 - 대상 객체에 대한 기능 확장이나 변경이 필요할때 객체의 결합을 통해 서브클래싱 대신 쓸수 있는 유연한 대안 구조 패턴 / 기본 컴포넌트에 동적으로 새로운 기능을 추가하기 위한 패턴 

5. File 클래스  
 - 파일의 크기, 접근권한, 삭제, 이름변경 작업 기능 제공 (Directory도 파일 취급)
 - new 연산으로 실제 파일이 생성되는 것은 아니고 메모리 상에서만 생성 
# 임시파일 생성 (createTempFile) : 프로그램 실행중에 사용되어 종료 시 삭제하는 방식을 주로 사용 

6. ObjectInputStream / ObjectOutputStream 
 - 직렬화 가능한 대상을 읽고 쓸 수 있다. 
 # 직렬화 가능한 대상은 기본형 타입 or java.io.Serializable 인터페이스 구현하고 있는 객체 
 - 객체를 저장한다. (직렬화 가능한 객체만!) - 직렬화 
 - 객체를 읽어온다. (읽어올 시 형변환) - 역직렬화 

* 객체 직렬화 : 객체를 다른 공간으로 저장, 전송하기 위한 이진 데이터 변환하는 매커니즘 

Serializable 인터페이스 : 아무런 내용이 없으며 직렬화를 고려하여 클래스를 작성해야 한다.
