1. 병렬화 : 프로그램의 성능을 향상시키기 위해 동시에 작업을 실행하는 것 

2. 병렬화 작업 전 고려대상
 1) 메모리의 속도
 2) CPU 캐시 메모리
 3) 디스크
 4) 네트워크 
 5) 커넥션 

3. 병렬(멀티코어 : 컴퓨터 n개) vs 병행 (멀티스레드 : 병행처리)

* 컨텍스트 스위칭 

4. Process
 - 각각의 프로세스는 메모리 공간에서 독립적으로 존재한다. 
 - 각각의 프로세스는 자신만의 메모리 구조를 가진다.
 - 프로세스 A,B,C가 있을 경우 각각 프로세스는 모드 같은 구조의 메모리 공간을 가진다.
 - 독립적인 만큼 다른 프로세스의 메모리 공간에 접근할 수 없다.

5. 프로세스간 통신 IPC
 - 프로세스 A에서 프로세스 B를 직접 접근할 수 없기 때문에 프로세스 간의 통신을 하는 특별한 방식이 필요 EX) mailslot, pipe 
 - 프로세스는 독립적인 메모리 공간을 지니기 때문에 IP를 통하지 않고 통신할 수 없다. 
 - 프로세스가 여럿이 병렬적으로 실행되기 위해서는 필연적으로 컨텍스트 스위칭이 발생할 수 밖에 없다. 

Thread 
 - 하나의 프로그램 내에 존재하는 여러 개의 실행 흐름을 위한 모델 
 - 다수의 실행흐름 처리 

# Thread 상속하는 클래스 작성 시 run 메소드를 overriding 
 - main() -> start() -> run()

메인과 run 함수는 병렬로 실행, 모든 스레드가 종료될 때 프로그램 종료

Runnable 인터페이스 
