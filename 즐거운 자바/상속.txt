1. 상속이란 ? 
상속 : 상속 관계는 is a 관계 혹은 kind of 관계라고 말할 수 있다.

상속 = 일반화 + 확장
상속이란 일반화와 확장이라는 개념을 합한 것이라고 생각하면 됩니다.
부모클래스를 상속받는다는것은 부모가 가지고 있는 것을 자식이 물려받아 
사용할 수 있다는 것을 의미합니다.

상속은 가장 강한 결합! ( 결합도가 올라간다. ) 반드시 써야만 할 때만 쓰고
되도록 사용 안하는게 좋다.  

아무것도 상속받지 않으면 자동으로 java.lang.Object를 상속 받는다. ( 최상위 클래스 )

2. 참조
부모 타입으로 자손 타입을 참조할 수 있다. 
EX) Car car = new Bus() // 오류가 나지 안을려면 bus가 car의 자손이어야 한다. 

위와 같은 문법은 자동차(car)의 객체 메소드만을 사용하고 싶을때(bus의 기능을 사용하지 않는다)
부모타입으로 자손타입을 참조한다. 

car 변수의 run 함수를 호출 할 시 overriding 된 bus 객체의 run 함수가 실행된다. 

3. 상속 다형성 - overriding 
 - 상위 클래스의 메서드를 하위 클래스가 재정의 하는 것이다. 
 - 부모 클래스 -> 자식 클래스 에서 재정의 

필드, 메소드의 오버라이딩 
 - 필드에 대한 오버라이딩 

부모필드 i = 5, 자식필드 i = 15 일때 
parent p = new child();
p.i 출력시 5를 출력 

오버라이딩한 i를 출력하는 자식함수 printI 함수 p.printI() 출력시 15를 출력 
따라서 필드는 참조타입을 따라간다. 

정보은닉(infomation hiding) 
- 필드는 숨겨야 한다. ( 메소드를 통해서만 접근해서 사용해야 한다. )

Getter, Setter 메소드 ( property )
 - private 필드를 접근하기 위한 방법 
 - 정보은닉을 위해 메소드를 통해서 필드를 변경 및 조회 할 수 있다. 

this : 자기자신을 참조할 수 있는 예약어 ( static 클래스에서 사용 불가, 메모리 생성시점이 다르기 때문)
