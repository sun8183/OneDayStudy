1. 제어의 역전 (Inversion of Control)
 - 제어 흐름을 직접 제어하는 것이 아니라 외부에서 관리하는 것

2. 프레임워크 VS 라이브러리
 - 프레임워크가 내가 작성한 코드를 제어하고, 대신 실행하면 프레임워크(JUnit)
 - 반면에 내가 작성한 코드가 직접 제어의 흐름을 담당한다면 그것은 라이브러리 

3. 의존관계 주입
 - 애플리케이션 실행 시점 에 외부에서 실제 구현 객체를 생성하고 클라이언트에 전달해서
클라이언트와 서버의 실제 의존관계가 연결되는 것
 - 의존관계 주입을 사용하면 클라이언트 코드를 변경하지 않고, 클라이언트가 호출하는 대상의
인스턴스를 변경할 수 있다. 
 - 의존관계 주입을 사용하면 정적인 클래스 의존관계를 변경하지 않고, 동적인 객체 인스턴스 의존관계를 
쉽게 변경할 수 있다. 

4. AppConfig ( IOC, DI 컨테이너 )
 - 객체를 생성하고 관리하면서 의존관계를 연결해 주는 것 