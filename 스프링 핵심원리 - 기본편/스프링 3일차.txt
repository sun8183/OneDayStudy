객체 지향 프로그래밍 

1. 객체 들의 모임 , 각각의 객체는 메시지를 주고받고, 데이터를 처리 할 수 있다.
2. 유연하고 변경이 용이하게 만들기 때문에 대규모 소프트 웨어에서 사용 

유연하고 변경이 용이하다. 
=> 부품을 쉽게 교체할 수 있어야 한다.

역할과 구현을 분리
역할과 구현을 구분하면 단순하면서 변경이 쉽다. 

역할 = 인터페이스
구현 = 인터페이스를 구현한 클래스, 구현 객체 

자바 언어의 다형성 Overrading ( 재정의 )

다형성의 본질
 - 인터페이스를 구현한 객체 인스턴스를 실행 시점에서 유연하게 변경 가능하다.
 - 클라이언트를 변경하지 않고 서버의 기능을 변경 

스프링과 객체 지향 
1. 다형성
2. 제어의 역전(IoC), 의존관계 주입(DI)으로 다형성을 활용하여 
역할과 구현을 편리하게 다룰 수 있도록 지원 