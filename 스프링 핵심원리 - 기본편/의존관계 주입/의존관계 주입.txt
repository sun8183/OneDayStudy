1. 의존관계 주입 종류
 - 생성자 주입 : 생성자 호출에서 의존관계를 주입 (생성자 호출시점에 1회 호출을 보장, 불변 필수 의존관계)
# 생성자가 1개밖에 없을 때 @Autowired 어노테이션을 생략할 수 있다. 

 - 수정자 주입(setter 주입) : setter 함수를 정의하여 간접적으로 주입, 객체를 생성할 때 생성자를 먼저 호출하고 setter는 그 다음 호출이 된다. 
# @Autowired(required = false) : 주입할 대상이 없으면 오류 발생!, 주입할 대상이 없어도 동작하게 하려면 속성을 지정하며 호출이 아예 안된다.

 - 필드 주입 : 접근 제한자에 상관 없이 필드에 값을 바로 주입한다. 
# 외부에서 변경이 쉽지 않다. (생성자의 역할변경이 쉽지 않음) 
# 사용하지 않는 것이 좋음 

 - 일반 메서드 주입 : 아무 메서드에서 @Autowired 를 사용할 수 있음

# 스프링 빈으로 우선 등록되어야 의존관계가 주입된다. 

2. 의존관계 옵션 처리 
 - Autowired 어노테이션의 required의 기본값은 True, 자동 주입 대상이 없으면 오류발생! 
 - @Nullable : 의존성 주입 대상에 값이 없으면 null을 지정한다. (주입대상 객체의 null값을 허용)
 - Optional<T> : 의존성 주입 대상에 값이 없으면 Empty를 지정한다. 

# Optional 
 - 객체를 포장해 주는 래퍼 클래스 (기본타입을 객체로!)
 - NullPointerException 예외를 제공되는 메서드로 간단히 회피가 가능 
 - 복잡한 조건문 없이 null값으로 인해 발생하는 예외를 처리할 수 있다. 
