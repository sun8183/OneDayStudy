1. 빈 스코프 
 - 빈이 존재할 수 있는 범위 

스프링 스코프 지원
1. 싱글톤 : 스코프를 지정하지 않으면 기본 스코프, 스프링 컨테이너의 시작고 종료까지 유지되는 가장 넓은 범위의 스코프
2. 프로토타입 : 스프링 컨테이너는 프로토타입 빈의 생성과 의존관계 주입까지만 관여하고 더는 관리하지 않는 매우 짧은 범위의 스코프 (사용자에게 새로운 빈을 생성+의존관계 주입 후 전달)
** 종료메서드가 어노테이션으로 호출되지 않는다. (스프링 컨테이너에서 관리하지 않기 때문)
** 변수를 이용해서 함수 호출 

# 웹 관련 스코프
1. request : 웹 요청이 들어오고 나갈때 까지 유지되는 스코프
2. session : 웹 세션이 생성되고 종료될 때 까지 유지되는 스코프
3. application : 웹의 서블릿 컨텍스와 같은 범위로 유지되는 스코프 

2. 프로토타입 스코프 - 싱글톤 빈과 함께 사용시 문제점 
 - 싱글톤 객체내에서 프로토 타입 객체는 사용할 때마다 새로 생성하는 것이 아니라 빈이 처음 만들어 지는 순간에만 만들어 진다. (사용자 입장에서 원하는 기능이 아님)

3. 스프링에서 제공하는 Provider로 문제 해결하기 
 # Dependency Lookup (DL) : 직접 필요한 의존관계를 찾는 것
 - ObjectFactory, ObjectProvider : 지정한 빈을 컨테이너에서 대신 찾아주는 DL 

ObjectFactory 와 ObjectProvider 차이점
ObjectProvider는 ObjectFactory를 상속받아 특별한 기능 구현 

4. JSR-330 Provider (자바표준)
 - javax.inject:javax.inject:1 gradle추가 필요
 - Provider<T> get() 함수로 사용 