스프링 

1. DI ( Dependency Injection): 의존관계, 의존성 주입
DI 컨테이너 제공 

[정리]
1. 모든 설계에 역할과 구현을 분리
2. 애플리케이션 설계도 공연을 설계 하듯이 배역만 만들어두고, 배우는 언제든지 유연하게
변경할 수 있도록 만드는 것이 좋은 객체 지향 설계다. 
3. 이상적으로는 모든 설계에 인터페이스를 부여하자  

[정책] -> ex) 할인, 구현체 인터페이스만 먼저 설계후 진행 

기능을 확장할 기능이 없다면, 구현체 클래스를 직접 사용하고, 향후 꼭 필요할 때 리팩터링해서
인터페이스를 도입  
