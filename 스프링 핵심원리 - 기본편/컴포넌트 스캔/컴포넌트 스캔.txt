1. 컴포넌트 스캔 @ComponentScan
 - 설정정보 없이 자동으로 스프링 빈을 등록하는 기능 제공
 - @Component 가 붙은 대상을 스캔하여 스프링 빈을 등록한다. 이떄 스프링 빈의 기본 이름은 클래스명을 사용하되 맨 앞글자만 소문자를 사용한다. 
# 빈 이름을 직접 설정하고 싶다면 @Component("빈이름") 이렇게 지정을 할 수 있다.

# 참고 : 컴포넌트 스캔을 사용하면 @Configuration 이 붙은 설정 정보도 자동으로 등록되기 때문에, AppConfig, TestConfig 등 앞서 만들어 두었던 설정 정보도 함께 등록되고, 실행되어 버린다. 

 2. 탐색위치와 기본스캔 대상 
 - basePackages = "패키지 이름", 패키지 이름을 지정하여 하위 패키지를 모두 탐색대상으로 선정할 수 있다. 만약 지정하지 않으면 @ComponentScan이 붙은 설정 정보 클래스의 패키지가 시작 위치가 된다.
 - excludeFilters : 컴포넌트가 스캔할 대상을 제외시킬 수 있다. 
 # 참고 : @SpingBootApplication 시작에는 @ComponentScan이 포함되어 있다. 
 - 컴포넌트 스캔은 @Component뿐만 아니라 다음과 같은 내용도 추가 대상에 포함된다.

@Comtroller : 스프링 MVC 컨트롤러로 인식
@Service : 특별한 처리는 없지만, 비즈니스로직 계층을 인식하는데 도움을 준다
@Repository : 스프링 데이터 접근 계층으로 인식하고, 데이터 계층의 예외를 스프링 예외로 변환해준다.
@Configuration : 스프링 설정 정보를 인식하고, 싱글톤을 유지하도록 추가 처리를 한다.  

3. 의존관계 자동 주입 @Autowired
 - 기존 객체를 생성하여 의존관계를 직접 명시 했는데, 의존관계 주입도 이 클래스 안에서 해결해야 한다.
 - @Autowired 는 객체 생성없이 자동으로 주입한다. 
 - 의존관계 자동 주입된 객체도 싱글톤 객체 