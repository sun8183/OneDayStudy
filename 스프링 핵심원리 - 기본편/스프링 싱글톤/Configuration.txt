1. @Configuration 어노테이션이 붙은 AppConfig.class 호출 
 - AppConfig.class getClass 출력 시 CGLIB 문자열이 붙은것을 확인할 수 있다. 
=> 이것은 내가 만든 클래스가 아니라 스프링이 CGLIB라는 바이트 코드 조작 라이브러리를 사용해서 AppConfig 클래스를 상속받은 임의의 다른 클래스를 만들고, 그 다른 클래스를 스프링 빈으로 등록한 것이다.

getClass() => hello.core.AppConfig$$SpringCGLIB$$0

임의의 다른 클래스가 싱글톤이 보장되도록 해주는 것

# @Configuration 적용 후 @Bean이 붙은 메서드 마다 스프링 빈이 존재하면 존재하는 빈을 반환, 스프링 빈이 없으면 생성해서 스프링 빈으로 등록하고 반환하는 코드가 동적으로 만들어진다. 

@Configuration 
 - 바이트코드를 조작하는 CGLIB 기술을 사용해서 싱글톤을 보장

[정리]
@Bean 만 사용해도 스프링 빈으로 등록되지만, 싱글톤은 보장하지 않는다.